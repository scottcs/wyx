local MapNode = require 'pud.map.MapNode'
local MapType = require 'pud.map.MapType'

context('MapNode', function()
	context('When instantiated with no arguments', function()
		local node = MapNode()
		test('should exist', function()
			assert_not_nil(node)
			assert_true(node:is_a(MapNode))
		end)
		test('should have correct default boolean values', function()
			assert_false(node:isAccessible())
			assert_false(node:isTransparent())
			assert_false(node:isLit())
			assert_false(node:wasSeen())
		end)
		test('should have correct default MapType', function()
			assert_true(node:getMapType():isType('empty'))
		end)
	end)

	context('When instantiated with arguments', function()
		local node = MapNode('doorClosed')
		test('should have correct default boolean values', function()
			assert_false(node:isAccessible())
			assert_false(node:isTransparent())
			assert_false(node:isLit())
			assert_false(node:wasSeen())
		end)
		test('should have correct MapType', function()
			assert_true(node:getMapType():isType('doorClosed'))
		end)
	end)

	context('When setting values', function()
		local node = MapNode()
		test('should have correct boolean flags', function()
			node:setAccessible(true)
			node:setTransparent(true)
			node:setLit(true)
			node:setSeen(true)
			assert_true(node:isAccessible())
			assert_true(node:isTransparent())
			assert_true(node:isLit())
			assert_true(node:wasSeen())
			node:setAccessible(false)
			node:setTransparent(false)
			node:setLit(false)
			node:setSeen(false)
			assert_false(node:isAccessible())
			assert_false(node:isTransparent())
			assert_false(node:isLit())
			assert_false(node:wasSeen())
		end)
		test('should have correct MapType', function()
			node:setMapType('doorClosed', 'A3')
			assert_true(node:getMapType():isType('doorClosed', 'A3'))
		end)
		test('should error when given incorrect values', function()
			assert_error(function() node:setMapType(23) end)
			assert_error(function() node:setMapType({}) end)
			assert_error(function() node:setMapType('s') end)
			assert_error(function() node:setMapType(function() end) end)
			assert_error(function() node:setAccessible(nil) end)
			assert_error(function() node:setAccessible(23) end)
			assert_error(function() node:setLit({}) end)
			assert_error(function() node:setTransparent('s') end)
			assert_error(function() node:setSeen(function() end) end)
		end)
	end)
end)
