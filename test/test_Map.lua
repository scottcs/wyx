local Map = require 'wyx.map.Map'
local MapNode = require 'wyx.map.MapNode'
local MapType = require 'wyx.map.MapType'
local FloorMapType = require 'wyx.map.FloorMapType'
local WallMapType = require 'wyx.map.WallMapType'
local DoorMapType = require 'wyx.map.DoorMapType'
local Rect = require 'wyx.kit.Rect'

context('Map', function()
	context('When instantiating with no arguments', function()
		local map = Map()
		test('should exist', function()
			assert_not_nil(map)
			assert_true(map:is_a(Map))
		end)
		test('should inherit Rect', function()
			assert_true(map:is_a(Rect))
		end)
		test('should have correct coordinates', function()
			assert_equal(map:getX(), 0)
			assert_equal(map:getY(), 0)
		end)
		test('should have correct size', function()
			assert_equal(map:getWidth(), 0)
			assert_equal(map:getHeight(), 0)
		end)
		test('should not have any locations defined', function()
			assert_nil(map:getLocation(0,0))
			assert_nil(map:getLocation(1,1))
			assert_nil(map:getLocation(-1,-1))
			assert_nil(map:getLocation(1,0))
			assert_nil(map:getLocation(0,1))
			assert_nil(map:getLocation(10,11))
			assert_nil(map:getLocation(-3,3))
		end)
	end)

	context('When instantiating with arguments', function()
		local map = Map(3, 15, 21, 50)
		test('should exist', function()
			assert_not_nil(map)
			assert_true(map:is_a(Map))
		end)
		test('should inherit Rect', function()
			assert_true(map:is_a(Rect))
		end)
		test('should have correct coordinates', function()
			assert_equal(map:getX(), 3)
			assert_equal(map:getY(), 15)
		end)
		test('should have correct size', function()
			assert_equal(map:getWidth(), 21)
			assert_equal(map:getHeight(), 50)
		end)
		test('should have empty locations within bounds', function()
			assert_true(map:getLocation(1,1):getMapType():isType(MapType('empty')))
			assert_true(map:getLocation(10,11):getMapType():isType(MapType('empty')))
			assert_true(map:getLocation(map:getSize()):getMapType():isType(MapType('empty')))
		end)
		test('should have no locations defined out of bounds', function()
			assert_nil(map:getLocation(0,0))
			assert_nil(map:getLocation(-1,-1))
			assert_nil(map:getLocation(1,0))
			assert_nil(map:getLocation(0,1))
			assert_nil(map:getLocation(-3,3))
		end)
	end)

	context('When setting values', function()
		local map = Map(0, 0, 20, 20)
		local node = MapNode(WallMapType())
		node:setLit(true)

		context('for setLocation', function()
			test('should have correct values', function()
				map:setLocation(3, 8, node)
				local testNode = map:getLocation(3, 8)
				assert_not_nil(testNode)
				assert_true(testNode:getMapType():is_a(WallMapType))
			end)
			test('should error on incorrect arguments', function()
				assert_error(function() map:setLocation() end)
				assert_error(function() map:setLocation(1) end)
				assert_error(function() map:setLocation(1, 1) end)
				assert_error(function() map:setLocation(0, 0, node) end)
				assert_error(function() map:setLocation('s', 's', 's') end)
				assert_error(function() map:setLocation(2, 2, {}) end)
			end)
		end)
	end)
end)
